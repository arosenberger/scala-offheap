/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdlib.h>
#include <jemalloc/jemalloc.h>

/* Header for class scala_offheap_internal_JemallocWrapper */

#ifndef _Included_scala_offheap_internal_JemallocWrapper
#define _Included_scala_offheap_internal_JemallocWrapper
#ifdef __cplusplus
extern "C" {
#endif

JNIEXPORT jlong JNICALL Java_scala_offheap_internal_JemallocWrapper_generateUnsignedLong_10 (JNIEnv *, jclass);
JNIEXPORT jboolean JNICALL verifyUnsignedLong_10 (JNIEnv *, jclass, jlong);

JNIEXPORT jboolean JNICALL Java_scala_offheap_internal_JemallocWrapper_is32BitWordSize_10 (JNIEnv *, jclass);

/*
 * Class:     scala_offheap_internal_JemallocWrapper
 * Method:    malloc_0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_scala_offheap_internal_JemallocWrapper_malloc_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     scala_offheap_internal_JemallocWrapper
 * Method:    realloc_0
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_scala_offheap_internal_JemallocWrapper_realloc_10
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     scala_offheap_internal_JemallocWrapper
 * Method:    free_0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_scala_offheap_internal_JemallocWrapper_free_10
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
